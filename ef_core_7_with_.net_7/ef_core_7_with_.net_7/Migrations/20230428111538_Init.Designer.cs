// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ef_core_7_with_.net_7.DAL;

#nullable disable

namespace ef_core_7_with_.net_7.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230428111538_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ef_core_7_with_.net_7.DAL.Entities.Info", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Field1")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<long>("Field10")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Field11")
                        .HasPrecision(4, 2)
                        .HasColumnType("decimal(4,2)");

                    b.Property<decimal>("Field12")
                        .HasPrecision(9, 5)
                        .HasColumnType("decimal(9,5)");

                    b.Property<decimal>("Field13")
                        .HasPrecision(19, 10)
                        .HasColumnType("decimal(19,10)");

                    b.Property<decimal>("Field14")
                        .HasPrecision(38, 19)
                        .HasColumnType("decimal(38,19)");

                    b.Property<DateTime>("Field15")
                        .HasColumnType("datetime2");

                    b.Property<string>("Field2")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Field3")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("Field4")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("Field5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Field6")
                        .HasColumnType("bit");

                    b.Property<byte>("Field7")
                        .HasColumnType("tinyint");

                    b.Property<short>("Field8")
                        .HasColumnType("smallint");

                    b.Property<int>("Field9")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Infos");
                });

            modelBuilder.Entity("ef_core_7_with_.net_7.DAL.Entities.Root", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConversionNode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dict")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NvarcharNode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roots");
                });

            modelBuilder.Entity("ef_core_7_with_.net_7.DAL.Entities.Root", b =>
                {
                    b.OwnsOne("ef_core_7_with_.net_7.DAL.Entities.Node", "JsonNode", b1 =>
                        {
                            b1.Property<Guid>("RootId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Level")
                                .HasColumnType("int");

                            b1.Property<string>("Name")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("OrderNumber")
                                .HasColumnType("int");

                            b1.HasKey("RootId");

                            b1.ToTable("Roots");

                            b1.ToJson("JsonNode");

                            b1.WithOwner()
                                .HasForeignKey("RootId");

                            b1.OwnsMany("ef_core_7_with_.net_7.DAL.Entities.Node", "Children", b2 =>
                                {
                                    b2.Property<Guid>("ChildRootId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int");

                                    b2.Property<int>("Level")
                                        .HasColumnType("int");

                                    b2.Property<string>("Name")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<int>("OrderNumber")
                                        .HasColumnType("int");

                                    b2.HasKey("ChildRootId", "Id");

                                    b2.ToTable("Roots");

                                    b2.WithOwner("Child")
                                        .HasForeignKey("ChildRootId");

                                    b2.Navigation("Child");
                                });

                            b1.OwnsOne("ef_core_7_with_.net_7.DAL.Entities.Node.Child#Node", "Child", b2 =>
                                {
                                    b2.Property<Guid>("NodeRootId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<int>("Level")
                                        .HasColumnType("int");

                                    b2.Property<string>("Name")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<int>("OrderNumber")
                                        .HasColumnType("int");

                                    b2.HasKey("NodeRootId");

                                    b2.ToTable("Roots");

                                    b2.WithOwner()
                                        .HasForeignKey("NodeRootId");
                                });

                            b1.Navigation("Child");

                            b1.Navigation("Children");
                        });

                    b.Navigation("JsonNode");
                });
#pragma warning restore 612, 618
        }
    }
}
